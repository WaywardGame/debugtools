import Entity from "entity/Entity";
import { TileUpdateType } from "game/IGame";
import Translation from "language/Translation";
import { IHookHost } from "mod/IHookHost";
import { IBindHandlerApi } from "newui/input/Bind";
import { DialogId, IDialogDescription } from "newui/screen/screens/game/Dialogs";
import { ITile } from "tile/ITerrain";
import Log from "utilities/Log";
import Vector2 from "utilities/math/Vector2";
import DebugTools from "../DebugTools";
import InspectInformationSection from "./component/InspectInformationSection";
import TabDialog, { SubpanelInformation } from "./TabDialog";
export declare type InspectDialogInformationSectionClass = new () => InspectInformationSection;
export default class InspectDialog extends TabDialog implements IHookHost {
    static description: IDialogDescription;
    static INSTANCE: InspectDialog | undefined;
    readonly DEBUG_TOOLS: DebugTools;
    readonly LOG: Log;
    private entityButtons;
    private infoSections;
    private entityInfoSection;
    private tilePosition?;
    private tile?;
    private inspectionLock?;
    private inspectingTile?;
    private storePanels;
    private shouldLog;
    private willShowSubpanel;
    constructor(id: DialogId);
    getSubpanels(): SubpanelInformation[];
    getName(): Translation;
    setInspection(what: Vector2 | Entity): this;
    update(): void;
    onCloseBind(): boolean;
    onContextMenuBind(api: IBindHandlerApi): boolean;
    onGameEnd(): void;
    onGameTickEnd(): void;
    onMoveComplete(): void;
    onTileUpdate(game: any, tile: ITile, x: number, y: number, z: number, tileUpdateType: TileUpdateType): void;
    protected onClose(): void;
    private updateSubpanels;
    private setInspectionTile;
    private logUpdate;
    private showInspectionLockMenu;
    private unlockInspection;
    private lockInspection;
}
