import { ICreature } from "entity/creature/ICreature";
import { INPC } from "entity/npc/INPC";
import { PlayerState } from "entity/player/IPlayer";
import Player from "entity/player/Player";
import { TileUpdateType } from "game/IGame";
import Translation from "language/Translation";
import { IHookHost } from "mod/IHookHost";
import { Bindable, BindCatcherApi } from "newui/BindingManager";
import { DialogId, IDialogDescription } from "newui/screen/screens/game/Dialogs";
import { ITile } from "tile/ITerrain";
import Log from "utilities/Log";
import Vector2 from "utilities/math/Vector2";
import DebugTools from "../DebugTools";
import InspectInformationSection from "./component/InspectInformationSection";
import TabDialog, { SubpanelInformation } from "./TabDialog";
export declare type InspectDialogInformationSectionClass = new () => InspectInformationSection;
export default class InspectDialog extends TabDialog implements IHookHost {
    static description: IDialogDescription;
    static INSTANCE: InspectDialog | undefined;
    readonly DEBUG_TOOLS: DebugTools;
    readonly LOG: Log;
    private entityButtons;
    private infoSections;
    private entityInfoSection;
    private tilePosition?;
    private tile?;
    private inspectionLock?;
    private inspectingTile?;
    private storePanels;
    private shouldLog;
    private willShowSubpanel;
    constructor(id: DialogId);
    getSubpanels(): SubpanelInformation[];
    getName(): Translation;
    setInspection(what: Vector2 | Player | ICreature | INPC): this;
    update(): void;
    onBindLoop(bindPressed: Bindable, api: BindCatcherApi): Bindable;
    onGameEnd(state: PlayerState): void;
    onGameTickEnd(): void;
    onMoveComplete(player: Player): void;
    onTileUpdate(tile: ITile, x: number, y: number, z: number, tileUpdateType: TileUpdateType): void;
    protected onClose(): void;
    private updateSubpanels;
    private setInspectionTile;
    private logUpdate;
    private showInspectionLockMenu;
    private unlockInspection;
    private lockInspection;
}
